# -*- coding: utf-8 -*-
"""Water_Quality_Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JJgCkfgBT_CZdWxIcCaDErTK7sfnCh9B
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import plotly.express as px
from google.colab import files
uploaded = files.upload()

df = pd.read_csv('water_potability.csv')
df.head()

df.columns

df.describe()

df.info()

# for determining the count of missing data
df.isnull().sum()

plt.figure(figsize=(12,8))
sns.heatmap(df.isnull())

## Data Visualization
#Correlation Matrix
plt.figure(figsize=(12,8))
sns.heatmap(df.corr(),annot=True)

#countplot = Create Bar plot
sns.countplot(x="Potability",data=df)

df["Potability"].value_counts()

#Visualization dataset also checking for Outliers

fig, ax = plt.subplots(ncols=5, nrows=2, figsize= (20,10))

# flatten()= This method is used to convert multidimensional arrays to a one-dimensional array.
ax= ax.flatten()

index= 0

for col, values in df.items():
  sns.boxplot(y= col, data= df, ax= ax[index])

  index +=1

sns.pairplot(df)

fig= px.pie(df, names= "Potability", hole= 0.4, template= "plotly_dark")
fig.show()

fig = px.scatter(df, x= "ph", y= "Sulfate", color="Potability", template= "plotly_dark")
fig.show()

##Filing NULL Values
# Calculates the percentage of null values ​​in each column.
df.isnull().mean().plot.bar(figsize= (6,6))
plt.xlabel("Features")
plt.ylabel("Percentage of missing values")

df["ph"]= df["ph"].fillna(df["ph"].mean())
df["Sulfate"]= df["Sulfate"].fillna(df["Sulfate"].mean())
df["Trihalomethanes"]= df["Trihalomethanes"].fillna(df["Trihalomethanes"].mean())

df.isnull().sum()

sns.heatmap(df.isnull())